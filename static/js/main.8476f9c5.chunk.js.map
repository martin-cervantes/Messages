{"version":3,"sources":["actions/index.js","reducers/index.js","store/index.js","containers/Container.js","index.js"],"names":["ADD","messageReducer","state","action","type","message","store","createStore","Presentational","props","input","handleChange","bind","submitMessage","event","this","setState","target","value","submitNewMessage","onChange","onClick","messages","map","idx","React","Component","connect","dispatch","addMessage","AppWrapper","Container","ReactDOM","render","document","getElementById"],"mappings":"yMAAaA,EAAM,MCcJC,EAZQ,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC7C,OAAQA,EAAOC,MACb,KAAKJ,EACH,MAAM,GAAN,mBACKE,GADL,CAEEC,EAAOE,UAEX,QACE,OAAOH,ICLEI,EAFDC,YAAYN,G,OCCpBO,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDP,MAAQ,CACXQ,MAAO,IAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBANJ,E,yDASNE,GACXC,KAAKC,SAAS,CACZN,MAAOI,EAAMG,OAAOC,U,sCAKtBH,KAAKN,MAAMU,iBAAiBJ,KAAKb,MAAMQ,OACvCK,KAAKC,UAAS,SAACd,GAAD,MAAY,CAAEQ,MAAO,S,+BAInC,OACE,gCACE,wDACA,uBAAOQ,MAAOH,KAAKb,MAAMQ,MAAOU,SAAUL,KAAKJ,eAC/C,uBACA,wBAAQU,QAASN,KAAKF,cAAtB,oBACA,6BACGE,KAAKN,MAAMa,SAASC,KAAK,SAAClB,EAASmB,GAChC,OAAQ,6BAAenB,GAANmB,e,GA9BFC,IAAMC,WAmDpBC,eAZS,SAACzB,GACvB,MAAO,CAACoB,SAAUpB,MAGO,SAAC0B,GAC1B,MAAO,CACLT,iBAAkB,SAACd,GACjBuB,EHhDoB,SAACvB,GACzB,MAAO,CACLD,KAAMJ,EACNK,QAASA,GG6CEwB,CAAWxB,QAKXsB,CAA6CnB,GCjDtDsB,E,uKAEF,OACE,cAAC,IAAD,CAAUxB,MAAOA,EAAjB,SACE,cAACyB,EAAD,U,GAJiBN,IAAMC,WAU/BM,IAASC,OAAO,cAAC,EAAD,IAAeC,SAASC,eAAe,W","file":"static/js/main.8476f9c5.chunk.js","sourcesContent":["export const ADD = 'ADD';\n\nexport const addMessage = (message) => {\n  return {\n    type: ADD,\n    message: message\n  }\n};\n","import { ADD } from '../actions';\n\nconst messageReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD:\n      return [\n        ...state,\n        action.message\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;\n","import { createStore } from 'redux';\nimport messageReducer from '../reducers';\n\nconst store = createStore(messageReducer);\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addMessage } from '../actions';\n\nclass Presentational extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  submitMessage() {\n    this.props.submitNewMessage(this.state.input);\n    this.setState((state) => ({ input: '' }));\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Type in a new Message:</h2>\n        <input value={this.state.input} onChange={this.handleChange}/>\n        <br/>\n        <button onClick={this.submitMessage}>Submit</button>\n        <ul>\n          {this.props.messages.map( (message, idx) => {\n              return (<li key={idx}>{message}</li>)\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {messages: state}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitNewMessage: (message) => {\n      dispatch(addMessage(message))\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Presentational);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Container from './containers/Container';\n\nclass AppWrapper extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Container/>\n      </Provider>\n    );\n  }\n};\n\nReactDOM.render(<AppWrapper />,document.getElementById('root'));\n"],"sourceRoot":""}